{"version":3,"sources":["D:/Workrelated/simon-says/src async","D:/Workrelated/simon-says/src/app/app.component.css","D:/Workrelated/simon-says/src/app/app.component.html","D:/Workrelated/simon-says/src/app/app.component.ts","D:/Workrelated/simon-says/src/app/app.module.ts","D:/Workrelated/simon-says/src/app/components/game/button/button.component.css","D:/Workrelated/simon-says/src/app/components/game/button/button.component.html","D:/Workrelated/simon-says/src/app/components/game/button/button.component.ts","D:/Workrelated/simon-says/src/app/components/game/game.component.css","D:/Workrelated/simon-says/src/app/components/game/game.component.html","D:/Workrelated/simon-says/src/app/components/game/game.component.ts","D:/Workrelated/simon-says/src/app/models/constants.ts","D:/Workrelated/simon-says/src/app/services/game-state.service.ts","D:/Workrelated/simon-says/src/environments/environment.ts","D:/Workrelated/simon-says/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\nh2 {\\r\\n  text-align: center;\\r\\n  text-transform: uppercase;\\r\\n  color: var(--title);\\r\\n  font-family: 'Courier New', Courier, monospace;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"\\r\\n<header>\\r\\n  <h2>Simon Says</h2>\\r\\n</header>\\r\\n\\r\\n<app-game></app-game>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  /**\r\n * @remarks\r\n * This class links up the app-root selector used in the {@file index.html}\r\n * to the other components. For more details look {@file app.module.ts}\r\n *\r\n */\r\n  title = 'simon';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GameComponent } from './components/game/game.component';\r\nimport { ButtonComponent } from './components/game/button/button.component';\r\n\r\nimport { GameStateService } from './services/game-state.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, GameComponent, ButtonComponent],\r\n  imports: [BrowserModule],\r\n  providers: [GameStateService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n/**\r\n* @remarks\r\n* This class imports the following components from the following files:\r\n* {AppComponent app.component.ts},\r\n* {GameComponent game.component.ts},\r\n* {ButtonComponent button.component.ts},\r\n* and the service from the following file:\r\n* {GameStateService game-state.service.ts}\r\n*/\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/app.module.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"button {\\r\\n  width: 5.6rem;\\r\\n  height: 5.6rem;\\r\\n  border: 0.24rem solid;\\r\\n  border-radius: 4rem;\\r\\n  background-color: var(--background1);\\r\\n}\\r\\n\\r\\n.green {\\r\\n  border-color: var(--green);\\r\\n}\\r\\n\\r\\n.green:active,\\r\\n.green.active {\\r\\n  background-color: var(--green);\\r\\n}\\r\\n\\r\\n.blue {\\r\\n  border-color: var(--blue);\\r\\n}\\r\\n\\r\\n.blue:active,\\r\\n.blue.active {\\r\\n  background-color: var(--blue);\\r\\n}\\r\\n\\r\\n.red {\\r\\n  border-color: var(--red);\\r\\n}\\r\\n\\r\\n.red:active,\\r\\n.red.active {\\r\\n  background-color: var(--red);\\r\\n}\\r\\n\\r\\n.yellow {\\r\\n  border-color: var(--yellow);\\r\\n}\\r\\n\\r\\n.yellow:active,\\r\\n.yellow.active {\\r\\n  background-color: var(--yellow);\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/components/game/button/button.component.css\n// module id = ../../../../../src/app/components/game/button/button.component.css\n// module chunks = 1","module.exports = \"<button [ngClass]=\\\"{active: active}\\\" class=\\\"{{ color }}\\\" (click)=\\\"onClick()\\\"></button>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/components/game/button/button.component.html\n// module id = ../../../../../src/app/components/game/button/button.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-game-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: [ './button.component.css']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  /**\r\n * @remarks\r\n * This class declares the selector app-game-button.\r\n *\r\n * @param color - The color in the app-game-button tag called color.\r\n * @param active - Shows if the button is active or not. If true the background gets changed to the color, otherwise to black. See {@file button.component.css}\r\n * @param guess - An event emitter from the type EventEmitter.\r\n *\r\n */\r\n  @Input()\r\n  color: string;\r\n  @Input()\r\n  active: boolean = false;\r\n  @Output()\r\n  guess: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  /**\r\n * @remarks\r\n * This method send out the color saved in the html tag app-game-button.\r\n *\r\n */\r\n  onClick() {\r\n    this.guess.emit(this.color);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/components/game/button/button.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\np {\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n#restarter {\\r\\n  width: 140px;\\r\\n  height: 30px;\\r\\n  border-radius: 4rem;\\r\\n  background-color: var(--background3);\\r\\n  color: var(--button);\\r\\n  font-family: 'Courier New', Courier, monospace;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  background-color: var(--background1);\\r\\n  width: 480px;\\r\\n  margin: 0 auto;\\r\\n  border: 0.24rem solid;\\r\\n  border-radius: 0.4rem;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  margin: 2rem;\\r\\n}\\r\\n\\r\\n.center {\\r\\n  -ms-flex-pack: center;\\r\\n      justify-content: center;\\r\\n  -ms-flex-align: baseline;\\r\\n      align-items: baseline;\\r\\n}\\r\\n\\r\\n.middle {\\r\\n  -ms-flex-pack: distribute;\\r\\n      justify-content: space-around;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/components/game/game.component.css\n// module id = ../../../../../src/app/components/game/game.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"flex center\\\">\\r\\n    <app-game-button [active]=\\\"colors.red\\\" color=\\\"red\\\" (guess)=\\\"playerGuess($event)\\\"></app-game-button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"flex middle\\\">\\r\\n    <app-game-button [active]=\\\"colors.blue\\\" color=\\\"blue\\\" (guess)=\\\"playerGuess($event)\\\"></app-game-button>\\r\\n    <p>{{ count }}</p>\\r\\n    <app-game-button [active]=\\\"colors.green\\\" color=\\\"green\\\" (guess)=\\\"playerGuess($event)\\\"></app-game-button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"flex center\\\">\\r\\n    <app-game-button [active]=\\\"colors.yellow\\\" color=\\\"yellow\\\" (guess)=\\\"playerGuess($event)\\\"></app-game-button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"flex center\\\">\\r\\n      <button id=\\\"restarter\\\" (click)=\\\"onClick()\\\">Start</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- Audio from https://codepen.io/sharonghae/full/dXOprE -->\\r\\n  \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Workrelated/simon-says/src/app/components/game/game.component.html\n// module id = ../../../../../src/app/components/game/game.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GameStateService } from '../../services/game-state.service';\r\nimport { START_COUNT, sleep } from '../../models/constants';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent{\r\n  /**\r\n * @remarks\r\n * The GameComponent defines the selector app-game used in the {@file app.component.html}.\r\n * It also uses the actual running game state from {@file game-state.service.ts} to sync\r\n * the count and shows the player the colors of each new round.\r\n *\r\n * @param count - Counts the numbers of correct guesses and shows it as a score, resets when user guesses wrong.\r\n * @param colors - An object containing colornames of the type boolean to determine the actual color.\r\n *\r\n */\r\n  running: boolean = false;\r\n  count: number;\r\n  sounds: any = {};\r\n  colors: any = {\r\n    red: false,\r\n    blue: false,\r\n    green: false,\r\n    yellow: false\r\n  };\r\n\r\n  constructor(private game: GameStateService) {\r\n    this.loadSounds();\r\n  }\r\n\r\n  /**\r\n  * @remarks\r\n  * This method loads all the sound files.\r\n  */\r\n  loadSounds(){\r\n    let audioUrl1 = '../../../assets/sounds/simonSound1.mp3';\r\n    let audioUrl2 = '../../../assets/sounds/simonSound2.mp3';\r\n    let audioUrl3 = '../../../assets/sounds/simonSound3.mp3';\r\n    let audioUrl4 = '../../../assets/sounds/simonSound4.mp3';\r\n    this.sounds= {\r\n      red: new Audio(audioUrl1),\r\n      blue: new Audio(audioUrl2),\r\n      green: new Audio(audioUrl3),\r\n      yellow: new Audio(audioUrl4)\r\n    };\r\n  }\r\n\r\n  /**\r\n  * @remarks\r\n  * This method plays specific sounds.\r\n  *\r\n  * @param color - Uses the color to get the sound.\r\n  *\r\n  */\r\n  playAudio(color: string){\r\n    this.sounds[color].play();\r\n  }\r\n  /**\r\n * @remarks\r\n * This method initialises the game upon clicking the start button.\r\n * It also changes the \"Start\" on the start button to \"Restart\".\r\n * If the game is already running it skips generating a Round and only restarts it.\r\n */\r\n onClick(){\r\n   if(!this.running){\r\n     document.getElementById(\"restarter\").innerHTML = \"Restart\"\r\n     this.game.state.subscribe(state => {\r\n       console.log(state);\r\n       if(this.count != state.count) {\r\n         this.count = state.count;\r\n         this.teasePlayer(state.round);\r\n       }\r\n     });\r\n     this.game.generateRound();\r\n     this.running = true;\r\n   }\r\n   else{\r\n     this.game.state.subscribe(state => {\r\n       console.log(state);\r\n       if(this.count != state.count) {\r\n         this.count = state.count;\r\n         this.teasePlayer(state.round);\r\n       }else if(this.count === START_COUNT){\r\n         this.teasePlayer(state.round);\r\n       }\r\n     });\r\n     this.game.restartGame();\r\n   }\r\n }\r\n\r\n  /**\r\n * @remarks\r\n * This method sends the event from the user pressing a button as a string to the {@method game.playerGuess()}.\r\n * See {@file button.component.ts}\r\n *\r\n * @param e - the event value of the app-game-button in the {@file game.component.html}\r\n *\r\n */\r\n  playerGuess(e: string) {\r\n    this.game.playerGuess(e);\r\n    this.playAudio(e);\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method, using the Promise method in {@file constants.ts}. sets the active color to true after waiting for 1000ms\r\n * after waiting another 400ms it sets the active color to false again. The active colors are saved in the round array in {@file game-state.service.ts}\r\n *\r\n * @param round - A string array containing the colors of the going round.\r\n *\r\n */\r\n  async teasePlayer(round: string[]) {\r\n    for (let i = 0; i < round.length; i++) {\r\n      await sleep(1000);\r\n      this.colors[round[i]] = true;\r\n      this.playAudio(round[i]);\r\n      await sleep(400);\r\n      this.colors[round[i]] = false;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/components/game/game.component.ts","export enum COLORS {\r\n  red,\r\n  green,\r\n  blue,\r\n  yellow\r\n}\r\n\r\nexport const START_COUNT = 1;\r\n\r\nexport const sleep = async time => {\r\n  return new Promise(resolve => setTimeout(resolve, time));\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/models/constants.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { COLORS, START_COUNT } from '../models/constants';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class GameStateService {\r\n  /**\r\n * @remarks\r\n * The GameStateService manages each playing state, guessing and generating new colors for each new round.\r\n * It also imports the constants variables declared in the models folder\r\n *\r\n * @param count - Counts the numbers of correct guesses and shows it as a score, resets when user guesses wrong.\r\n * @param round - A string array containing the colors of the going round.\r\n * @param player - A string array containing the colors the player picked in the going round.\r\n * @param state - Sets each round to a new state.\r\n *\r\n */\r\n  count: number;\r\n  round: string[] = [];\r\n  player: string[] = [];\r\n  state = new Subject<any>();\r\n\r\n  constructor() {\r\n    this.count = START_COUNT;\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method uses a rounded random number to get one out of 4 colors in a string array.\r\n *\r\n * @returns - A random color saved in a string.\r\n *\r\n */\r\n  private get randomColor(): string {\r\n    let index = Math.floor(Math.random() * 3.99 );\r\n    return COLORS[index];\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method empties the string array of round. By using the count value a new color is added to the round.\r\n * It sets this state as active and returns the newly filled string array.\r\n *\r\n * @returns - The same round filled with one more color.\r\n *\r\n */\r\n  generateRound(): string[] {\r\n    this.round = [];\r\n    for (let i = 0; i < this.count; i++){\r\n      this.appendRound();\r\n    }\r\n    this.setState();\r\n    return this.round;\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method increases the count when the player guessed right and adds a new color to the round.\r\n *\r\n * @param increment - If the player guessed right increment is true otherwise false.\r\n *\r\n */\r\n  appendRound(increment: boolean = false): void {\r\n    if(increment) {\r\n      this.count++;\r\n    }\r\n    this.round.push(this.randomColor);\r\n  }\r\n  /**\r\n * @remarks\r\n * This method sets the count to the default count constant and generates a new round.\r\n *\r\n * @returns - A new generated round with the count of 1.\r\n *\r\n */\r\n  restartGame(): string[] {\r\n    this.count = START_COUNT;\r\n    return this.generateRound();\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method adds a new color with the type string into the player array which contains the guesses.\r\n * The player array gets emptied after guessing all the colors and the state gets changed.\r\n *\r\n * @param val - The color the player picked as a string.\r\n *\r\n */\r\n  playerGuess(val: string) {\r\n    this.player.push(val);\r\n    if(!this.compareRound()) {\r\n      this.player = [];\r\n    }\r\n    this.setState();\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method compares the player picked colors to the round colors.\r\n *\r\n * @returns true - If the player guessed all colors correctly.\r\n * @returns false - If the player guessed incorrectly and restarts the game.\r\n *\r\n */\r\n  compareRound(): boolean {\r\n    for(let i = 0; i < this.player.length; i++) {\r\n      if(this.player[i] !== this.round[i]) {\r\n        this.restartGame();\r\n        return false;\r\n      }\r\n    }\r\n    if(this.player.length === this.round.length) {\r\n      this.updateGame();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method updates the game by adding a new color with the {@method appendRound()}\r\n * and resets the players guesses.\r\n *\r\n */\r\n  updateGame() {\r\n    this.appendRound(true);\r\n    this.player = [];\r\n  }\r\n\r\n  /**\r\n * @remarks\r\n * This method sets the state of the game.\r\n *\r\n */\r\n  setState() {\r\n    this.state.next({\r\n      player: this.player,\r\n      round: this.round,\r\n      count: this.count\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/app/services/game-state.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Workrelated/simon-says/src/main.ts"],"sourceRoot":"webpack:///"}